name: Qualcomm Build Debian Package Reusable Workflow
description: |
  This reusable workflow is called by debian-packaging repos to offer a consistent build process.
  Package repos will adhere to  a git-buildpackage structure and contain the small "build-debian-package.yml"
  caller workflow in its .github/workflows folder.

on:
  workflow_call:
    inputs:
      qcom-build-utils-ref:
        description: The ref name that was used to invoke this reusable workflow
        type: string
        required: true

      debian-ref:
        description: The debian ref to build. For example branch "debian/latest" or tag "debian/1.0.0-1"
        type: string
        required: true
        default: debian/latest

      ubuntu-codename:
        description: The ubuntu codename to build for. Ex noble, jammy, etc
        type: string
        default: noble

      run-lintian:
        description: Run lintian or not during the build
        type: boolean
        default: false

      run-abi-checker:
        description: Run the ABI checker or not
        type: boolean
        default: false

      push-to-repo:
        description: Whether or not to push the built package to the repository if the compiled version is not already in it
        type: boolean
        default: false

      is-post-merge:
        description: true if this build has been triggered by a merge into debian/latest. Will ensure PR branch is deleted
        type: boolean
        default: false

    secrets:
      TOKEN:
        required: true

permissions:
  contents: read
  security-events: write

env:
  REPO_URL: https://qualcomm-linux.github.io/pkg-oss-staging-repo/
  REPO_NAME: qualcomm-linux/pkg-oss-staging-repo

  UBUNTU_CODENAME: ${{inputs.ubuntu-codename}}
  DISTRO: ubuntu
  ARCH: arm64

jobs:
  build-debian-package:

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        
    container:
      image: ghcr.io/qualcomm-linux/pkg-builder:latest
      credentials:
        username: ${{ vars.DEB_PKG_BOT_CI_USERNAME }}
        password: ${{ secrets.TOKEN }}

    steps:

      - name: Ensure Workspace Is Clean
        run: rm -rf *

      - name: Checkout qcom-build-utils
        uses: actions/checkout@v4
        with:
          repository: qualcomm-linux/qcom-build-utils
          ref: ${{inputs.qcom-build-utils-ref}}
          token: ${{secrets.TOKEN}}
          path: ./qcom-build-utils
          fetch-depth: 1
          sparse-checkout: |
            .github
            scripts

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{inputs.debian-ref}}
          token: ${{secrets.TOKEN}}
          path: ./package-repo
          fetch-depth: 0 # <- Important for the tags fetching to work
          fetch-tags: true # <- Important

      - name: Build Debian Packages
        uses: ./qcom-build-utils/.github/actions/build_package
        with:
          pkg-dir: package-repo
          build-dir: build-area
          run-lintian: ${{inputs.run-lintian}}
          
      - name: Run ABI (Application Binary Interface) Check
        if: ${{inputs.run-abi-checker == true}}
        uses: ./qcom-build-utils/.github/actions/abi_checker

      - name: Push package to repo
        if: ${{inputs.push-to-repo == true}}
        uses: ./qcom-build-utils/.github/actions/push_to_repo
        with:
          force-override: false
          token: ${{secrets.TOKEN}}

      - name: Push debian/<version> tag
        if: ${{inputs.is-post-merge == true}}
        run: |
          cd ./package-repo

          version=$(dpkg-parsechangelog --show-field Version)
          git tag debian/${version}

          git push origin debian/${version}